{
  "tool_definitions": [
    {
      "name": "detect_current_project",
      "line_number": 642,
      "parameters": [],
      "return_type": "Dict[str, Any]",
      "has_security_validation": false,
      "uses_global_instances": [],
      "complexity_score": 7,
      "parameter_count": 0,
      "optional_parameter_count": 0
    },
    {
      "name": "get_vector_db_health",
      "line_number": 920,
      "parameters": [],
      "return_type": "Dict[str, Any]",
      "has_security_validation": false,
      "uses_global_instances": [
        "timestamp_str",
        "db"
      ],
      "complexity_score": 48,
      "parameter_count": 0,
      "optional_parameter_count": 0
    },
    {
      "name": "force_conversation_sync",
      "line_number": 1347,
      "parameters": [
        {
          "raw": "parallel_processing: bool = True",
          "default_value": "True",
          "optional": true,
          "name": "parallel_processing",
          "type": "bool"
        }
      ],
      "return_type": "Dict[str, Any]",
      "has_security_validation": false,
      "uses_global_instances": [
        "all_entries"
      ],
      "complexity_score": 71,
      "parameter_count": 1,
      "optional_parameter_count": 1
    },
    {
      "name": "smart_metadata_sync_status",
      "line_number": 1697,
      "parameters": [],
      "return_type": "Dict[str, Any]",
      "has_security_validation": false,
      "uses_global_instances": [],
      "complexity_score": 10,
      "parameter_count": 0,
      "optional_parameter_count": 0
    },
    {
      "name": "smart_metadata_sync_run",
      "line_number": 1735,
      "parameters": [
        {
          "raw": "target_files: Optional[List[str]] = None",
          "default_value": "None",
          "optional": true,
          "name": "target_files",
          "type": "Optional[List[str]]"
        }
      ],
      "return_type": "Dict[str, Any]",
      "has_security_validation": false,
      "uses_global_instances": [],
      "complexity_score": 14,
      "parameter_count": 1,
      "optional_parameter_count": 1
    },
    {
      "name": "get_enhanced_statistics",
      "line_number": 1957,
      "parameters": [],
      "return_type": "Dict[str, Any]",
      "has_security_validation": false,
      "uses_global_instances": [
        "db",
        "extractor"
      ],
      "complexity_score": 22,
      "parameter_count": 0,
      "optional_parameter_count": 0
    },
    {
      "name": "get_enhancement_analytics_dashboard",
      "line_number": 2045,
      "parameters": [],
      "return_type": "Dict[str, Any]",
      "has_security_validation": false,
      "uses_global_instances": [
        "db",
        "extractor"
      ],
      "complexity_score": 34,
      "parameter_count": 0,
      "optional_parameter_count": 0
    },
    {
      "name": "get_ab_testing_insights",
      "line_number": 2220,
      "parameters": [],
      "return_type": "Dict[str, Any]",
      "has_security_validation": false,
      "uses_global_instances": [],
      "complexity_score": 8,
      "parameter_count": 0,
      "optional_parameter_count": 0
    },
    {
      "name": "get_validation_learning_insights",
      "line_number": 2323,
      "parameters": [],
      "return_type": "Dict[str, Any]",
      "has_security_validation": false,
      "uses_global_instances": [
        "db"
      ],
      "complexity_score": 9,
      "parameter_count": 0,
      "optional_parameter_count": 0
    },
    {
      "name": "get_realtime_learning_insights",
      "line_number": 2756,
      "parameters": [],
      "return_type": "Dict[str, Any]",
      "has_security_validation": false,
      "uses_global_instances": [],
      "complexity_score": 6,
      "parameter_count": 0,
      "optional_parameter_count": 0
    },
    {
      "name": "get_system_health_report",
      "line_number": 2922,
      "parameters": [],
      "return_type": "Dict[str, Any]",
      "has_security_validation": false,
      "uses_global_instances": [],
      "complexity_score": 19,
      "parameter_count": 0,
      "optional_parameter_count": 0
    },
    {
      "name": "get_semantic_validation_health",
      "line_number": 3850,
      "parameters": [],
      "return_type": "Dict[str, Any]",
      "has_security_validation": false,
      "uses_global_instances": [
        "db",
        "pattern_manager",
        "technical_analyzer",
        "semantic_analyzer",
        "component_health"
      ],
      "complexity_score": 20,
      "parameter_count": 0,
      "optional_parameter_count": 0
    }
  ],
  "configuration_patterns": [
    {
      "pattern_name": "Security Validation",
      "frequency": 0,
      "examples": [],
      "consolidation_impact": "Must be preserved in consolidated tools"
    },
    {
      "pattern_name": "Global Database Instance",
      "frequency": 5,
      "examples": [
        "get_vector_db_health",
        "get_enhanced_statistics",
        "get_enhancement_analytics_dashboard"
      ],
      "consolidation_impact": "Shared resource - consolidation opportunity"
    },
    {
      "pattern_name": "Parameter Expansion",
      "frequency": 0,
      "examples": [],
      "consolidation_impact": "Already following consolidation-friendly pattern"
    },
    {
      "pattern_name": "Error Handling",
      "frequency": 69,
      "examples": [
        "try/except blocks throughout codebase"
      ],
      "consolidation_impact": "Consistent error handling simplifies consolidation"
    },
    {
      "pattern_name": "Async Function Pattern",
      "frequency": 12,
      "examples": [
        "All MCP tools use async def pattern"
      ],
      "consolidation_impact": "Consistent async pattern enables clean consolidation"
    }
  ],
  "parameter_analysis": {
    "common_parameters": {
      "parallel_processing": 1,
      "target_files": 1
    },
    "type_distribution": {
      "bool": 1,
      "Optional": 1
    },
    "complexity_categories": {
      "simple": [
        "detect_current_project",
        "get_vector_db_health",
        "force_conversation_sync",
        "smart_metadata_sync_status",
        "smart_metadata_sync_run",
        "get_enhanced_statistics",
        "get_enhancement_analytics_dashboard",
        "get_ab_testing_insights",
        "get_validation_learning_insights",
        "get_realtime_learning_insights",
        "get_system_health_report",
        "get_semantic_validation_health"
      ],
      "moderate": [],
      "complex": []
    },
    "consolidation_insights": {
      "parameter_expansion_candidates": [],
      "simple_consolidation_targets": [
        "detect_current_project",
        "get_vector_db_health",
        "force_conversation_sync",
        "smart_metadata_sync_status",
        "smart_metadata_sync_run",
        "get_enhanced_statistics",
        "get_enhancement_analytics_dashboard",
        "get_ab_testing_insights",
        "get_validation_learning_insights",
        "get_realtime_learning_insights",
        "get_system_health_report",
        "get_semantic_validation_health"
      ],
      "complex_tools_needing_cleanup": []
    }
  },
  "dependency_analysis": {
    "import_dependencies": [
      "from mcp.server.fastmcp import FastMCP",
      "import asyncio",
      "import logging",
      "import json",
      "import re",
      "import sys",
      "import os",
      "from pathlib import Path",
      "from typing import Optional, List, Dict, Any",
      "from datetime import datetime, timedelta",
      "import pytz",
      "from database.vector_database import ClaudeVectorDatabase",
      "from database.conversation_extractor import ConversationExtractor",
      "from processing.enhanced_processor import UnifiedEnhancementProcessor, ProcessingContext",
      "from processing.semantic_feedback_analyzer import SemanticFeedbackAnalyzer",
      "from processing.technical_context_analyzer import TechnicalContextAnalyzer",
      "from processing.multimodal_analysis_pipeline import MultiModalAnalysisPipeline",
      "from processing.semantic_pattern_manager import SemanticPatternManager",
      "from processing.validation_enhancement_metrics import ValidationEnhancementMetrics",
      "from processing.unified_enhancement_manager import UnifiedEnhancementManager, SearchStrategy, EnhancementAnalyticsEngine",
      "from ab_testing_engine import ABTestingEngine",
      "from oauth_21_security_manager import OAuth21SecurityManager",
      "from processing.adaptive_validation_orchestrator import AdaptiveValidationOrchestrator, AdaptiveValidationRequest",
      "from processing.user_communication_learner import UserCommunicationStyleLearner",
      "from processing.cultural_intelligence_engine import CulturalIntelligenceEngine",
      "from processing.cross_conversation_analyzer import CrossConversationAnalyzer",
      "from file_watcher import file_watcher",
      "from incremental_processor import incremental_processor",
      "from watcher_recovery import recovery_system",
      "import logging",
      "from database.smart_metadata_sync import SmartMetadataSync",
      "from database.smart_metadata_sync import SmartMetadataSync",
      "from processing.unified_enhancement_engine import UnifiedEnhancementEngine",
      "from processing.unified_enhancement_engine import UnifiedEnhancementEngine",
      "from mcp.enhancement_config_manager import EnhancementConfigurationManager",
      "import signal",
      "import sys"
    ],
    "global_variables": [
      "db",
      "extractor",
      "security_manager",
      "semantic_analyzer",
      "technical_analyzer",
      "multimodal_pipeline",
      "pattern_manager",
      "validation_metrics",
      "adaptive_orchestrator",
      "user_communication_learner",
      "cultural_intelligence_engine",
      "cross_conversation_analyzer"
    ],
    "configuration_patterns": {
      "fastmcp_initialization": 1,
      "security_manager_usage": 12,
      "database_initialization": 23,
      "error_handling_blocks": 69,
      "logging_statements": 145,
      "mcp_tool_decorators": 36
    },
    "tool_registration_order": [
      "search_conversations",
      "search_conversations_unified",
      "get_project_context_summary",
      "detect_current_project",
      "get_vector_db_health",
      "get_most_recent_conversation",
      "force_conversation_sync",
      "smart_metadata_sync_status",
      "smart_metadata_sync_run",
      "search_validated_solutions",
      "search_failed_attempts",
      "search_by_topic",
      "get_enhanced_statistics",
      "get_enhancement_analytics_dashboard",
      "run_enhancement_ab_test",
      "get_ab_testing_insights",
      "process_validation_feedback",
      "get_validation_learning_insights",
      "search_with_validation_boost",
      "get_conversation_context_chain",
      "search_with_context_chains",
      "analyze_solution_feedback_patterns",
      "get_realtime_learning_insights",
      "run_unified_enhancement",
      "get_system_health_report",
      "configure_enhancement_systems",
      "analyze_semantic_feedback",
      "analyze_technical_context",
      "run_multimodal_feedback_analysis",
      "get_semantic_pattern_similarity",
      "run_semantic_validation_ab_test",
      "run_adaptive_learning_enhancement",
      "process_adaptive_validation_feedback",
      "get_adaptive_learning_insights",
      "get_semantic_validation_health"
    ],
    "consolidation_risks": {
      "shared_global_state": 12,
      "complex_imports": 0,
      "security_dependencies": 3,
      "initialization_dependencies": 34
    }
  }
}